(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     25460,        493]
NotebookOptionsPosition[     24095,        463]
NotebookOutlinePosition[     24556,        480]
CellTagsIndexPosition[     24513,        477]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["IPPT Model", "Title",
 CellChangeTimes->{{3.806692867344747*^9, 3.806692878126807*^9}, {
  3.806692990224663*^9, 
  3.80669299545553*^9}},ExpressionUUID->"88660cb0-8198-4336-a5d0-\
dd8e8ab8bd65"],

Cell["2. Single Case Solver ", "Subtitle",
 CellChangeTimes->{{3.806692886012347*^9, 3.806692955924101*^9}, {
  3.8066951593222103`*^9, 3.806695160225547*^9}, {3.806695527468617*^9, 
  3.806695529838091*^9}, {3.806696397386013*^9, 
  3.8066963984795027`*^9}},ExpressionUUID->"288f9f05-4af1-474d-b6cc-\
39a434067bc1"],

Cell["\<\
Instructions:
- This notebook will evaluate the model using a single set of input conditions

How to Run:
- Define the input conditions you desire
- Click \[OpenCurlyDoubleQuote]Evaluate Notebook in Menu Options\
\[CloseCurlyDoubleQuote]
- Only the time-to-solution will be output explicitly, use \
\[OpenCurlyDoubleQuote]3. Single Case Plots\[CloseCurlyDoubleQuote] to \
visualize model results\
\>", "Text",
 CellChangeTimes->{{3.806695171049321*^9, 3.806695361699114*^9}, {
  3.806695533108334*^9, 3.8066956282608*^9}, {3.806696091643095*^9, 
  3.806696119226252*^9}, {3.8066963667307053`*^9, 
  3.806696392700179*^9}},ExpressionUUID->"474d7232-a177-4e6c-bb1e-\
0e2e6c47ff2b"],

Cell[CellGroupData[{

Cell["Inputs", "Section",
 CellChangeTimes->{{3.806692980908045*^9, 3.806692987214312*^9}, {
  3.806695631618133*^9, 
  3.806695632369883*^9}},ExpressionUUID->"db631d87-9851-4fd1-9815-\
d0c71c5fda4d"],

Cell["\<\
Notes:
- Inputs loaded from csv file with name \
\[OpenCurlyDoubleQuote]DataIO-Run#.csv\[CloseCurlyDoubleQuote]
- Evaluate first cell then click \[OpenCurlyDoubleQuote]Browse...\
\[CloseCurlyDoubleQuote] button below to find csv file\
\>", "Text",
 CellChangeTimes->{{3.807322837182032*^9, 3.80732293502775*^9}, {
  3.807322971133111*^9, 3.807323124797463*^9}, {3.837085738357883*^9, 
  3.837085745411256*^9}, {3.837099315858636*^9, 
  3.8370993789200583`*^9}},ExpressionUUID->"08a80de6-e7c1-43bd-a519-\
059c01ee3623"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "DataIOFile", "]"}], "\[IndentingNewLine]", 
 RowBox[{"FileNameSetter", "[", 
  RowBox[{
   RowBox[{"Dynamic", "[", "DataIOFile", "]"}], ",", "\"\<OpenList\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.806693036052907*^9, 3.806693116851849*^9}, {
   3.806695639578535*^9, 3.806695925473926*^9}, {3.8067286629613457`*^9, 
   3.806728666453198*^9}, {3.806771952022563*^9, 3.8067719573687773`*^9}, {
   3.8067823750324993`*^9, 3.806782445191937*^9}, {3.8067838245103703`*^9, 
   3.806783825319385*^9}, {3.806858214699085*^9, 3.806858238476818*^9}, {
   3.806858852140912*^9, 3.806858882570003*^9}, {3.8068601500955143`*^9, 
   3.8068601507399273`*^9}, {3.806860192196115*^9, 3.8068601997902603`*^9}, {
   3.8070639666754913`*^9, 3.807063967226646*^9}, {3.807064049290688*^9, 
   3.8070640494103937`*^9}, {3.807064198161476*^9, 3.80706421410398*^9}, {
   3.807064380600881*^9, 3.80706438188505*^9}, {3.807064601428851*^9, 
   3.807064611360669*^9}, {3.813156089196745*^9, 3.813156094487255*^9}, {
   3.813156136450803*^9, 3.8131561371435223`*^9}, {3.813156191733679*^9, 
   3.813156195796421*^9}, {3.813156906177126*^9, 3.81315690736903*^9}, {
   3.813354399627441*^9, 3.813354406636813*^9}, {3.813354646350245*^9, 
   3.813354662820911*^9}, {3.81335469963647*^9, 3.81335470196941*^9}, {
   3.813378553151475*^9, 3.8133785551599293`*^9}, {3.813379608876191*^9, 
   3.813379611811736*^9}, 3.813379980192223*^9, {3.813380158377758*^9, 
   3.813380159170269*^9}, {3.8133803452441273`*^9, 3.813380348805153*^9}, {
   3.813380576795237*^9, 3.813380589878853*^9}, {3.813380739415279*^9, 
   3.8133807426674*^9}, {3.8134329234244843`*^9, 3.813432924503099*^9}, 
   3.813433331508416*^9, {3.813433482304826*^9, 3.813433488072*^9}, {
   3.813433635584755*^9, 3.813433637709943*^9}, {3.813433793779799*^9, 
   3.8134337979619913`*^9}, 3.81343473116365*^9, {3.81343513377528*^9, 
   3.8134351346411953`*^9}, {3.813435445327416*^9, 3.8134354511766853`*^9}, {
   3.813435758695718*^9, 3.813435773331472*^9}, 3.813435852801929*^9, 
   3.81343606518351*^9, 3.813436692423572*^9, 3.813436838265335*^9, {
   3.8134388226031933`*^9, 3.8134388283426332`*^9}, {3.832361305744082*^9, 
   3.8323613060687313`*^9}, {3.8323615138750963`*^9, 3.832361517531131*^9}, {
   3.832361655676697*^9, 3.83236165610563*^9}, {3.832361799129484*^9, 
   3.832361799379224*^9}, {3.832361832478429*^9, 3.83236183253612*^9}, {
   3.8323619356872473`*^9, 3.832361936533523*^9}, {3.83236203284774*^9, 
   3.83236203339649*^9}, {3.83242249436133*^9, 3.832422498286949*^9}, {
   3.8324232527792873`*^9, 3.8324232577072163`*^9}, 3.83242345222084*^9, {
   3.832423869625051*^9, 3.832423870510776*^9}, {3.832440182690751*^9, 
   3.832440184697071*^9}, {3.832440882485971*^9, 3.8324408910724783`*^9}, {
   3.832442031177549*^9, 3.832442031258985*^9}, {3.83244235525951*^9, 
   3.832442355657853*^9}, {3.8324430535994387`*^9, 3.8324430641994133`*^9}, 
   3.832443709484823*^9, 3.832444415972247*^9, {3.832444892006426*^9, 
   3.832444895090228*^9}, {3.832445079781752*^9, 3.832445080523797*^9}, 
   3.832445295727087*^9, 3.83244551972164*^9, {3.8324455657461843`*^9, 
   3.832445566577265*^9}, {3.832445769006673*^9, 3.832445769408554*^9}, {
   3.832445923144896*^9, 3.832445927225155*^9}, {3.8324460310454063`*^9, 
   3.832446033413965*^9}, {3.83246487482024*^9, 3.832464875831458*^9}, 
   3.8324652195345097`*^9, {3.83246526773302*^9, 3.832465268470271*^9}, {
   3.832465606231914*^9, 3.8324656174537487`*^9}, {3.8324660450723248`*^9, 
   3.832466045690895*^9}, {3.8324665200800743`*^9, 3.832466520580802*^9}, {
   3.832466940890822*^9, 3.8324669415382147`*^9}, {3.832467661561664*^9, 
   3.832467667074649*^9}, {3.832468122205999*^9, 3.8324681237103863`*^9}, {
   3.8324686053122587`*^9, 3.832468605483222*^9}, {3.8324691813999043`*^9, 
   3.832469186501191*^9}, {3.832469448686048*^9, 3.832469448949424*^9}, {
   3.8324696144471807`*^9, 3.832469622817765*^9}, {3.8324697612617617`*^9, 
   3.8324697679439783`*^9}, {3.8324699703127947`*^9, 3.83246997446812*^9}, {
   3.832470551789921*^9, 3.832470552244163*^9}, {3.83247094362551*^9, 
   3.832470944280375*^9}, 3.8324713360576363`*^9, {3.8324716643271313`*^9, 
   3.832471665325754*^9}, {3.832471996578072*^9, 3.8324720053015547`*^9}, {
   3.832472080044455*^9, 3.832472080273247*^9}, 3.832472634490465*^9, {
   3.8324734059308243`*^9, 3.832473410990082*^9}, {3.832473679141735*^9, 
   3.832473679701148*^9}, {3.832474120794855*^9, 3.83247412946762*^9}, {
   3.83247469888692*^9, 3.832474703051799*^9}, {3.832517591323429*^9, 
   3.832517591709656*^9}, {3.83251824044416*^9, 3.832518241656794*^9}, {
   3.832518501467373*^9, 3.8325185119802513`*^9}, {3.832518803634407*^9, 
   3.83251880393572*^9}, {3.832519167411798*^9, 3.832519168078576*^9}, {
   3.832519426963449*^9, 3.832519428036332*^9}, {3.832519619610881*^9, 
   3.832519624647431*^9}, 3.832519874751009*^9, {3.832520039418003*^9, 
   3.832520075291375*^9}, {3.83254211002417*^9, 3.832542110147307*^9}, {
   3.8325427022162523`*^9, 3.832542743719136*^9}, {3.832543102039193*^9, 
   3.832543137966482*^9}, {3.832543363002527*^9, 3.832543363147283*^9}, {
   3.832543660469449*^9, 3.832543662672181*^9}, {3.832543929733444*^9, 
   3.832543942796723*^9}, 3.832544223657991*^9, {3.832544795803434*^9, 
   3.8325448105973787`*^9}, {3.832545096830435*^9, 3.8325451347271633`*^9}, {
   3.8325456434525833`*^9, 3.832545644084462*^9}, {3.832546018659577*^9, 
   3.8325460194077387`*^9}, 3.832546174185534*^9, {3.832546468416065*^9, 
   3.832546494020895*^9}, {3.8325468538775682`*^9, 3.832546856012101*^9}, {
   3.832546976632769*^9, 3.83254697773001*^9}, {3.832547135503849*^9, 
   3.832547135776544*^9}, {3.8325473179598303`*^9, 3.8325473183235064`*^9}, {
   3.8325479253547287`*^9, 3.832547928764616*^9}, {3.8325479803303947`*^9, 
   3.8325479804505863`*^9}, {3.832549047600169*^9, 3.832549050357444*^9}, {
   3.832549306384036*^9, 3.8325493066855087`*^9}, 3.832549519141141*^9, {
   3.832549678999545*^9, 3.83254967961029*^9}, {3.832549865478525*^9, 
   3.832549871717265*^9}, {3.832550059751429*^9, 3.832550060396*^9}, {
   3.832550231790082*^9, 3.832550236218401*^9}, {3.83255125712086*^9, 
   3.832551257736405*^9}, {3.832551545643449*^9, 3.832551552171781*^9}, 
   3.8325517487319508`*^9, {3.832700171630007*^9, 3.8327001720895767`*^9}, {
   3.83270031775807*^9, 3.832700330233602*^9}, {3.832700672497204*^9, 
   3.832700677081153*^9}, 3.8327030995181103`*^9, {3.832775319818408*^9, 
   3.8327754062999697`*^9}, {3.832775437930766*^9, 3.832775442053461*^9}, {
   3.832775739329493*^9, 3.832775756045823*^9}, {3.832775816400284*^9, 
   3.832775864440393*^9}, 3.83278071098424*^9, {3.832780861006373*^9, 
   3.832780862079393*^9}, {3.8327813480556383`*^9, 3.8327813484360657`*^9}, {
   3.832788278781137*^9, 3.83278832247122*^9}, {3.832788557931933*^9, 
   3.832788558163903*^9}, 3.832788783886155*^9, {3.83279380464193*^9, 
   3.83279380810784*^9}, {3.832862033180419*^9, 3.832862034744379*^9}, {
   3.833650893289234*^9, 3.833650894548193*^9}, {3.833651795687538*^9, 
   3.833651795931019*^9}, {3.8336775728691273`*^9, 3.8336775735919123`*^9}, {
   3.833677761457343*^9, 3.8336777616657677`*^9}, {3.833677948427474*^9, 
   3.83367796300781*^9}, {3.8336781937717733`*^9, 3.8336782196628313`*^9}, {
   3.8340805963703957`*^9, 3.834080610769025*^9}, 3.834081260027508*^9, {
   3.834081571223651*^9, 3.834081588311276*^9}, {3.8340819066074657`*^9, 
   3.8340819131424303`*^9}, {3.83408194675953*^9, 3.834081947185918*^9}, {
   3.8340822275242777`*^9, 3.8340822351842003`*^9}, {3.834082493302073*^9, 
   3.834082493593519*^9}, {3.834084098266102*^9, 3.834084143293419*^9}, {
   3.834255757346908*^9, 3.834255775194949*^9}, {3.834256004511938*^9, 
   3.834256004993231*^9}, {3.83425642523976*^9, 3.834256425598686*^9}, {
   3.8342568700454483`*^9, 3.8342568726212187`*^9}, {3.8342571616818666`*^9, 
   3.8342571631040688`*^9}, {3.8342573702027073`*^9, 3.834257381147656*^9}, {
   3.834257650886632*^9, 3.834257676952479*^9}, {3.8342581296794147`*^9, 
   3.834258140613854*^9}, 3.834261399321368*^9, {3.834261631134561*^9, 
   3.83426163159459*^9}, 3.8342616670233593`*^9, 3.834261982584597*^9, {
   3.8342622934877234`*^9, 3.834262302925271*^9}, {3.8342625242887506`*^9, 
   3.8342625465396557`*^9}, 3.834262745357841*^9, 3.834263076421578*^9, 
   3.834263262210125*^9, {3.834776657323984*^9, 3.8347766580204477`*^9}, 
   3.834777743376601*^9, {3.834778408171955*^9, 3.834778409418456*^9}, {
   3.834778669843288*^9, 3.834778674398903*^9}, {3.834780113571364*^9, 
   3.834780121271241*^9}, {3.8347804404455442`*^9, 3.834780443368964*^9}, 
   3.834780657014607*^9, {3.834780990592411*^9, 3.8347809925097218`*^9}, {
   3.834790775925486*^9, 3.834790776430806*^9}, {3.834791559196547*^9, 
   3.8347915594196777`*^9}, {3.834791879110487*^9, 3.834791904749405*^9}, {
   3.83479263278166*^9, 3.83479263300572*^9}, 3.834793169198357*^9, 
   3.835795692328508*^9, 3.835795982328672*^9, {3.835796257489111*^9, 
   3.8357962626292953`*^9}, {3.835796858573238*^9, 3.835796859426901*^9}, {
   3.835797222397872*^9, 3.835797240273614*^9}, {3.835797578471054*^9, 
   3.835797579223832*^9}, {3.835797962861809*^9, 3.835797964750572*^9}, {
   3.835798291663885*^9, 3.8357982921693993`*^9}, {3.8357985190107613`*^9, 
   3.835798534209083*^9}, {3.835798759880739*^9, 3.835798760385993*^9}, {
   3.8358100657479963`*^9, 3.835810065993726*^9}, {3.835810629749547*^9, 
   3.835810630322294*^9}, {3.835811028168828*^9, 3.835811028696219*^9}, 
   3.835812324568151*^9, 3.835814662535982*^9, {3.835816547834754*^9, 
   3.835816605289217*^9}, {3.835817088514385*^9, 3.8358170906736927`*^9}, {
   3.835817468022855*^9, 3.835817501986574*^9}, {3.835817669639958*^9, 
   3.835817672800602*^9}, 3.8358329872493153`*^9, {3.835837940730301*^9, 
   3.835837941122691*^9}, {3.835880477808436*^9, 3.8358804910491*^9}, 
   3.8358982776250973`*^9, {3.83589853974855*^9, 3.8358985493329363`*^9}, 
   3.8358988318060617`*^9, {3.835899307223852*^9, 3.835899309584605*^9}, {
   3.835899933574149*^9, 3.835899935249441*^9}, 3.835900411803364*^9, {
   3.8359009869989977`*^9, 3.835900990305464*^9}, {3.835903479601026*^9, 
   3.835903480668458*^9}, 3.835918971055616*^9, {3.8359192689304943`*^9, 
   3.8359192693455133`*^9}, {3.835923349944654*^9, 3.835923369351014*^9}, 
   3.835923771217586*^9, 3.835924852279258*^9, {3.835925166614368*^9, 
   3.8359251669730253`*^9}, 3.835925678943637*^9, {3.835926038399356*^9, 
   3.835926038634766*^9}, 3.835926274442527*^9, {3.835926531535042*^9, 
   3.8359265606732616`*^9}, {3.835977293857689*^9, 3.835977348116672*^9}, 
   3.835977389350478*^9, {3.836073770384242*^9, 3.83607378923853*^9}, {
   3.836074658204617*^9, 3.8360746631872463`*^9}, 3.836074738892075*^9, {
   3.836074799160027*^9, 3.8360748008017387`*^9}, 3.83607619591333*^9, 
   3.836076288458617*^9, {3.836077625550976*^9, 3.836077657005343*^9}, 
   3.836090586693808*^9, {3.836092706294672*^9, 3.836092706475028*^9}, {
   3.836092910545464*^9, 3.836092910904265*^9}, {3.8360937062934933`*^9, 
   3.836093720198977*^9}, {3.836093870403954*^9, 3.8360938793809357`*^9}, {
   3.836095952145183*^9, 3.8360959890340147`*^9}, {3.836096035194113*^9, 
   3.836096097891828*^9}, {3.836096136751851*^9, 3.8360961667777777`*^9}, {
   3.83609620640256*^9, 3.836096291512224*^9}, {3.836096815001704*^9, 
   3.8360968211663437`*^9}, 3.8361502560763702`*^9, {3.836151805968499*^9, 
   3.8361518065746117`*^9}, {3.8364804059629374`*^9, 3.836480406479089*^9}, 
   3.8364827414337873`*^9, {3.8365061529471817`*^9, 3.836506186922852*^9}, {
   3.8365062231267853`*^9, 3.836506227187224*^9}, {3.836506257755806*^9, 
   3.836506306898316*^9}, {3.836508924135775*^9, 3.83650892767896*^9}, {
   3.83693350579865*^9, 3.8369335231898003`*^9}, {3.836933579070956*^9, 
   3.836933628145568*^9}, {3.836933724031332*^9, 3.836933724301893*^9}, {
   3.8369337814200172`*^9, 3.8369337927703667`*^9}, 3.836933871626828*^9, {
   3.8369341278182707`*^9, 3.836934169219451*^9}, {3.837001290793215*^9, 
   3.837001350959502*^9}, {3.8370013899648647`*^9, 3.837001393710759*^9}, {
   3.837001833960946*^9, 3.837001835286763*^9}, {3.837002181338114*^9, 
   3.837002181528043*^9}, {3.8370026025620728`*^9, 3.837002618693246*^9}, {
   3.837004334181528*^9, 3.837004334630103*^9}, {3.837004763798538*^9, 
   3.8370047649902763`*^9}, 3.837006354462246*^9, {3.837015668916616*^9, 
   3.837015805315639*^9}, {3.83701669373997*^9, 3.837016720998501*^9}, 
   3.837018075503661*^9, {3.8370370475090446`*^9, 3.837037074572371*^9}, {
   3.837038039089218*^9, 3.83703804038137*^9}, 3.837038415661583*^9, 
   3.837038932378088*^9, 3.837085749395177*^9, {3.837085832321391*^9, 
   3.837085841951913*^9}, {3.8393372575404177`*^9, 3.839337258111683*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"9b0599b9-e26b-4226-b128-6ff71cf77146"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "*", " ", "Evaluate", " ", "this", " ", "to", " ", "load", " ", "csv", " ",
     "file", " ", "data"}], " ", "**)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"MasterTable", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"DataIOFile", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"Nsols", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Dimensions", "[", "MasterTable", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "*", " ", "Find", " ", "index", " ", "of", " ", "needed", " ", 
     "solutions"}], " ", "**)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jtable", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MasterTable", "[", 
            RowBox[{"[", 
             RowBox[{"j", "+", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "25", "]"}], "]"}], "\[Equal]", "\"\<\>\""}], "]"}], 
        ",", 
        RowBox[{"jtable", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"jtable", ",", 
           RowBox[{"{", "j", "}"}]}], "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "Nsols"}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Length", "[", "jtable", "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "jtable", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8370858724286213`*^9, 3.837085892644785*^9}, {
  3.837085936241068*^9, 3.8370859366673403`*^9}, {3.8370987010714083`*^9, 
  3.837098701295086*^9}, {3.837099389945293*^9, 3.8370994220957603`*^9}, {
  3.837101765331955*^9, 3.837101818162381*^9}, {3.837101906255212*^9, 
  3.8371019796251802`*^9}, {3.8371020658264837`*^9, 3.8371020946483183`*^9}, {
  3.8373032028019667`*^9, 3.837303206400752*^9}, {3.8540280290561256`*^9, 
  3.854028029149393*^9}, {3.854577864204601*^9, 
  3.854577865132724*^9}},ExpressionUUID->"1331e2d9-7ec1-4e30-938e-\
7d28b9bfcc1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solver", "Section",
 CellChangeTimes->{{3.806693010815278*^9, 3.806693016726206*^9}, {
  3.806693086553792*^9, 3.8066930875882797`*^9}, {3.8066959345228987`*^9, 
  3.806695935099702*^9}, {3.8070642157137938`*^9, 
  3.8070642166418533`*^9}},ExpressionUUID->"e201b81f-e439-4803-8bbc-\
f8bbb79d2418"],

Cell["\<\
Notes:
- The strange bit of code below was adapted from the website: \
https://mathematica.stackexchange.com/questions/167089/how-to-force-\
mathematica-to-clean-up-the-cache
- The purpose of using multiple kernels is help correct a memory leak that \
occurs when running multiple cases
- The output plots are used to ensure that the solution has reached an \
asymptotic value (future updates might estimate this value from LC-time \
instead of using tmax input)
- The only data that makes it out of this loop is the output data, so single \
cases cannot be analyzed
- Memory usage output is a diagnostic for ensuring the program is behaving \
well\
\>", "Text",
 CellChangeTimes->{{3.807322837182032*^9, 3.80732293502775*^9}, {
   3.807322971133111*^9, 3.807323124797463*^9}, 
   3.837216249974554*^9},ExpressionUUID->"8b95595d-0f5d-4cb0-801f-\
b7b91b52630f"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"MasterTable", "=", 
       RowBox[{"Import", "[", 
        RowBox[{"DataIOFile", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"Nsols", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Dimensions", "[", "MasterTable", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "*", " ", "Find", " ", "index", " ", "of", " ", "needed", " ", 
        "solutions"}], " ", "**)"}], "\[IndentingNewLine]", 
      RowBox[{"jtable", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"TrueQ", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"MasterTable", "[", 
              RowBox[{"[", 
               RowBox[{"j", "+", "1"}], "]"}], "]"}], "[", 
             RowBox[{"[", "25", "]"}], "]"}], "\[Equal]", "\"\<\>\""}], "]"}],
           ",", 
          RowBox[{"jtable", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"jtable", ",", 
             RowBox[{"{", "j", "}"}]}], "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "Nsols"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Length", "[", "jtable", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "jtable", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ClearSystemCache", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"LaunchKernels", "[", "1", "]"}], ";", "\n", 
      RowBox[{"Print", "[", 
       RowBox[{"MemoryInUse", "[", "]"}], "]"}], ";", "\n", 
      RowBox[{"calcsPerKernel", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"SetSharedVariable", "[", 
       RowBox[{"Output", ",", "MasterTable", ",", "sol"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<j=\>\"", ",", "j"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"ParallelEvaluate", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"sol", "=", 
            RowBox[{"Timing", "[", 
             RowBox[{"MPSolve", "[", 
              RowBox[{
               RowBox[{"MasterTable", "[", 
                RowBox[{"[", 
                 RowBox[{"j", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "24"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Print", "[", "\"\<Done.\>\"", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<Your solution took \>\"", ",", " ", 
             RowBox[{"sol", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\"\< seconds\>\""}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"MasterTable", "[", 
             RowBox[{"[", 
              RowBox[{"j", "+", "1"}], "]"}], "]"}], "=", "Output"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Export", "[", 
            RowBox[{
             RowBox[{"DataIOFile", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "MasterTable"}], "]"}], 
           ";"}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"MemoryInUse", "[", "]"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{"j", ",", "calcsPerKernel"}], "]"}], "\[Equal]", "0"}], 
           ",", 
           RowBox[{
            RowBox[{"CloseKernels", "[", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"ClearSystemCache", "[", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"LaunchKernels", "[", "1", "]"}], ";"}]}], "]"}], ";"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "jtable"}], "}"}]}], "]"}], ";", "\n", 
      RowBox[{"CloseKernels", "[", "]"}], ";", "\n", 
      RowBox[{"ClearSystemCache", "[", "]"}], ";", "\n", 
      RowBox[{"Print", "[", 
       RowBox[{"MemoryInUse", "[", "]"}], "]"}], ";"}], "\[IndentingNewLine]",
      "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"iters", ",", "1", ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8375323112703257`*^9, 3.8375323873666487`*^9}, {
  3.839206506800191*^9, 3.83920650706745*^9}, {3.839207744345913*^9, 
  3.8392077453126307`*^9}, {3.83920986831767*^9, 3.839209910056175*^9}, {
  3.839288202540976*^9, 3.8392882027900877`*^9}, {3.8540280398499737`*^9, 
  3.854028077001358*^9}, {3.8540284112642417`*^9, 3.854028418073805*^9}, {
  3.854129053787174*^9, 3.85412905406945*^9}, {3.854577876800129*^9, 
  3.8545778812606816`*^9}},ExpressionUUID->"94e76ad4-46bc-41a9-80de-\
37aef2bfa193"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1645.7142857142856`, 966.8571428571428},
WindowMargins->{{
  Automatic, -5.14285714285711}, {-5.14285714285711, Automatic}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"41d33041-0373-4001-bd3d-c52a4f879b6a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 201, 4, 98, "Title",ExpressionUUID->"88660cb0-8198-4336-a5d0-dd8e8ab8bd65"],
Cell[784, 28, 316, 5, 53, "Subtitle",ExpressionUUID->"288f9f05-4af1-474d-b6cc-39a434067bc1"],
Cell[1103, 35, 689, 16, 173, "Text",ExpressionUUID->"474d7232-a177-4e6c-bb1e-0e2e6c47ff2b"],
Cell[CellGroupData[{
Cell[1817, 55, 200, 4, 67, "Section",ExpressionUUID->"db631d87-9851-4fd1-9815-d0c71c5fda4d"],
Cell[2020, 61, 528, 11, 81, "Text",ExpressionUUID->"08a80de6-e7c1-43bd-a519-059c01ee3623"],
Cell[2551, 74, 12834, 176, 48, "Input",ExpressionUUID->"9b0599b9-e26b-4226-b128-6ff71cf77146"],
Cell[15388, 252, 2269, 57, 202, "Input",ExpressionUUID->"1331e2d9-7ec1-4e30-938e-7d28b9bfcc1a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17694, 314, 303, 5, 67, "Section",ExpressionUUID->"e201b81f-e439-4803-8bbc-f8bbb79d2418"],
Cell[18000, 321, 870, 18, 150, "Text",ExpressionUUID->"8b95595d-0f5d-4cb0-801f-b7b91b52630f"],
Cell[18873, 341, 5194, 118, 685, "Input",ExpressionUUID->"94e76ad4-46bc-41a9-80de-37aef2bfa193"]
}, Open  ]]
}, Open  ]]
}
]
*)

